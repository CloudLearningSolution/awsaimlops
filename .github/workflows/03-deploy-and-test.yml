name: Deploy and Test Model

on:
  workflow_run:
    workflows: ["Train Model in Development and Production"]
    types:
      - completed

jobs:
  register-model:
    name: Register Model
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
    - name: Check out repo
      uses: actions/checkout@v3

    - name: Install Azure ML CLI extension
      run: az extension add -n ml -y

    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Register Model
      run: |
        RUN_ID=$(az ml job list --workspace-name mldemows --resource-group mldemo --query "[?status=='Completed'] | [-1].name" -o tsv)
        az ml model create --name diabetes-model \
          --path azureml://jobs/$RUN_ID/outputs/artifacts/model \
          --type mlflow_model \
          --workspace-name mldemows \
          --resource-group mldemo

  deploy-staging:
    name: Deploy to Staging Endpoint
    runs-on: ubuntu-latest
    needs: register-model
    environment: staging
    steps:
    - name: Check out repo
      uses: actions/checkout@v3

    - name: Install Azure ML CLI extension
      run: az extension add -n ml -y

    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy Model to Staging Endpoint
      run: |
        ENDPOINT_NAME="staging-endpoint"
        MODEL_NAME="diabetes-model"
        MODEL_VERSION=$(az ml model show --name $MODEL_NAME --workspace-name mldemows --resource-group mldemo --query version -o tsv)
        az ml online-endpoint create --name $ENDPOINT_NAME --workspace-name mldemows --resource-group mldemo || echo "Endpoint already exists"
        az ml online-deployment create --name blue \
          --endpoint $ENDPOINT_NAME \
          --model $MODEL_NAME:$MODEL_VERSION \
          --instance-type Standard_DS3_v2 \
          --workspace-name mldemows \
          --resource-group mldemo
        az ml online-endpoint update --name $ENDPOINT_NAME --traffic blue=100 \
          --workspace-name mldemows \
          --resource-group mldemo

  test-staging:
    name: Test Staging Endpoint
    runs-on: ubuntu-latest
    needs: deploy-staging
    environment: staging
    steps:
    - name: Check out repo
      uses: actions/checkout@v3

    - name: Install Azure ML CLI extension
      run: az extension add -n ml -y

    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Test Staging Endpoint
      run: |
        ENDPOINT_NAME="staging-endpoint"
        echo '{
          "input_data": {
            "columns": [
              "Pregnancies", "PlasmaGlucose", "DiastolicBloodPressure", "TricepsThickness",
              "SerumInsulin", "BMI", "DiabetesPedigree", "Age"
            ],
            "data": [
              [9, 104, 51, 7, 24, 27.36983156, 1.350472047, 43],
              [6, 73, 61, 35, 24, 18.74367404, 1.074147566, 75],
              [4, 115, 50, 29, 243, 34.69215364, 0.741159926, 59]
            ]
          }
        }' > sample-data.json
        RESPONSE=$(az ml online-endpoint invoke --name $ENDPOINT_NAME \
          --request-file sample-data.json \
          --workspace-name mldemows \
          --resource-group mldemo)
        echo "Response from staging endpoint: $RESPONSE"

  deploy-production:
    name: Deploy Model to Production Endpoint
    runs-on: ubuntu-latest
    needs: test-staging
    environment: production  # This triggers the manual approval
    steps:
    - name: Check out repo
      uses: actions/checkout@v3

    - name: Install Azure ML CLI extension
      run: az extension add -n ml -y

    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy Model to Production Endpoint
      run: |
        ENDPOINT_NAME="production-endpoint"
        MODEL_NAME="diabetes-model"
        MODEL_VERSION=$(az ml model show --name $MODEL_NAME --workspace-name mldemows --resource-group mldemo --query version -o tsv)
        az ml online-endpoint create --name $ENDPOINT_NAME --workspace-name mldemows --resource-group mldemo || echo "Endpoint already exists"
        az ml online-deployment create --name blue \
          --endpoint $ENDPOINT_NAME \
          --model $MODEL_NAME:$MODEL_VERSION \
          --instance-type Standard_DS3_v2 \
          --workspace-name mldemows \
          --resource-group mldemo
        az ml online-endpoint update --name $ENDPOINT_NAME --traffic blue=100 \
          --workspace-name mldemows \
          --resource-group mldemo